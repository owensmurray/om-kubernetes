apiVersion: v1
kind: Namespace
metadata:
  annotations:
    description: |
      The namespace under which {{name}} stuff runs.
  name: {{name}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    description: |
      This defines the service account as which legion pods run.
  name: {{name}}
  namespace: {{name}}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    description: |
      A role that has pod management permissions, allowing the {{name}}
      service to self-manage itself.
  namespace: {{name}}
  name: self-management
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    description: |
      Bind legion pods to self-management roles.
  name: {{name}}
  namespace: {{name}}
subjects:
- kind: ServiceAccount
  name: {{name}}
roleRef:
  kind: Role
  name: self-management
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    cluster-goal: "1"
    description: |
      This is a headless service that causes pods to be exposed via DNS
      records, and acts as a place to store legion-cluster wide metadata.
  name: {{name}}
  namespace: {{name}}
spec:
  selector:
    app: {{name}}
  type: ClusterIP
  clusterIP: None
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    description: |
      Pod of the {{name}} service.
  name: {{name}}-01
  namespace: {{name}}
  labels:
    app: {{name}}
spec:
  containers:
  - name: {{name}}-container
    image: {{image}} # us.gcr.io/om-images/om-discovery:latest
    env:
      - name: OM_KUBERNETES_NAMESPACE
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
  serviceAccountName: {{name}}
  hostname: {{name}}-01
  subdomain: {{name}}
  terminationGracePeriodSeconds: 5
  dnsConfig:
    searches:
    - {{name}}.{{name}}.svc.cluster.local
